{"ast":null,"code":"var _jsxFileName = \"/Users/andresnew00/Desktop/Projects/Pet-Tracker-React-Springboot/src/main/java/com/company/Pettracker/app/src/App.js\";\nimport React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport OrderNCreateBar from \"./components/OrderNCreateBar\";\nimport TableOfClients from \"./components/TableOfClients\";\nimport CreateModal from \"./components/CreateModal\";\nimport CheckInModal from \"./components/CheckInModal\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport EditModal from \"./components/EditModal\";\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nexport default function App() {\n  const [clientData, setClientData] = useState([]);\n  const [selectedClient, setSelectedClient] = useState();\n  const [createIsOpen, setCreateIsOpen] = useState(false);\n  const [checkInIsOpen, setCheckInIsOpen] = useState(false);\n  const [deleteIsOpen, setDeleteIsOpen] = useState(false);\n  const [editIsOpen, setEditIsOpen] = useState(false);\n  const [updateList, setUpdateList] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [orderOfItems, setOrderOfItems] = useState(\"Date Older - Newer\");\n  useEffect(() => {\n    Axios.get(\"http://localhost:8080/pet/getAll\").then(response => {\n      setClientData(response.data);\n      console.log(\"useEffect ran\");\n    });\n  }, [updateList]); // working!\n\n  const handleOpenCreateModal = () => {\n    setCreateIsOpen(!createIsOpen);\n  };\n\n  const handleCheckInModal = () => {\n    setCheckInIsOpen(!checkInIsOpen);\n  };\n\n  const handleDeleteModal = () => {\n    setDeleteIsOpen(!deleteIsOpen);\n  };\n\n  const handleEditModal = () => {\n    setEditIsOpen(!editIsOpen);\n  }; // this works!\n\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }; // working!\n\n\n  const updateListOfClients = () => {\n    switch (orderOfItems) {\n      case \"Alphabetical\":\n        setClientData(clientData.sort((a, b) => (a.petName > b.petName) * 2 - 1));\n        break;\n\n      case \"Date Newer - Older\":\n        setClientData(clientData.sort((a, b) => (a.lastTime < b.lastTime) * 2 - 1));\n        break;\n\n      default:\n        setClientData(clientData.sort((a, b) => (a.lastTime > b.lastTime) * 2 - 1));\n    }\n  };\n\n  const updateSelectedClient = (clientId, clientName, petName, phoneNumber, lastTime, behavior, banned) => {\n    setSelectedClient({\n      petId: clie,\n      clientName: clientName,\n      petName: petName,\n      phoneNumber: phoneNumber,\n      lastTime: lastTime,\n      behavior: behavior,\n      banned: banned\n    });\n  };\n\n  const changeOrder = e => {\n    setOrderOfItems(e.target.text);\n    updateListOfClients();\n  };\n\n  const deleteClient = clientId => {\n    const url = \"http://localhost:8080/pet/deletePet/\" + clientId; // state, before delete anything\n\n    const currentClients = clientData; // Remove deleted item from state.\n\n    setClientData(currentClients.filter(clients => clients.petId !== clientId));\n    Axios.delete(url).then(response => {\n      if (response.status === \"error\") {\n        // Oops, something went wrong. Let's get that deleted Id back.\n        setClientData(currentClients); // Show Error message here.\n      } else {\n        // Delete successfully, do nothing.\n        // Because we already remove the deleted id from state.\n        // Show success message here.\n        //TODO CREATE A Message on screen to show successful delete\n        console.log(\"Pet is bye bye\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    search: search,\n    updateSearch: updateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(OrderNCreateBar, {\n    changeOrder: changeOrder,\n    order: orderOfItems,\n    toggleCreateModal: handleOpenCreateModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableOfClients, {\n    order: orderOfItems,\n    search: search,\n    clientData: clientData,\n    updateSelectedClient: updateSelectedClient,\n    selectedClient: selectedClient,\n    toggleCheckIn: handleCheckInModal,\n    toggleDelete: handleDeleteModal,\n    toggleEdit: handleEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), createIsOpen ? /*#__PURE__*/React.createElement(CreateModal, {\n    toggleCreateModal: handleOpenCreateModal,\n    setUpdateList: setUpdateList,\n    updateList: updateList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }) : null, editIsOpen ? /*#__PURE__*/React.createElement(EditModal, {\n    toggleEditModal: handleEditModal,\n    setSelectedClient: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }) : null, /*#__PURE__*/React.createElement(CheckInModal, {\n    showModal: checkInIsOpen,\n    selectedClient: selectedClient,\n    onHide: handleCheckInModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DeleteModal, {\n    showModal: deleteIsOpen,\n    selectedClient: selectedClient,\n    onHide: handleDeleteModal,\n    deleteClient: deleteClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }));\n} // class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleOpenCreateModal = this.handleOpenCreateModal.bind(this);\n//     this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n//     this.changeOrder = this.changeOrder.bind(this);\n//     this.getClient = this.getClient.bind(this);\n//     this.state = {\n//       clientData: [\n//         {\n//           petId: \"\",\n//           clientName: \"\",\n//           petName: \"\",\n//           phoneNumber: \"\",\n//           lastTime: \"\",\n//           behavior: \"\",\n//           banned: \"\",\n//         },\n//       ],\n//       createIsOpen: false,\n//       checkInIsOpen: false,\n//       deleteIsOpen: false,\n//       editIsOpen: false,\n//       search: \"\",\n//       orderOfitems: \"Date Older - Newer\",\n//     };\n//   }\n//   componentDidMount() {\n//     this.getAllClients();\n//   }\n//   getAllClients = () => {\n//     Axios.get(\"http://localhost:8080/pet/getAll\").then((response) =>\n//       this.setState({ clientData: response.data })\n//     );\n//   };\n//   handleOpenCreateModal() {\n//     this.setState({\n//       createIsOpen: !this.state.createIsOpen,\n//     });\n//   }\n//   handleOpenEditModal() {\n//     this.setState({\n//       editIsOpen: !this.state.editIsOpen,\n//     });\n//   }\n//   handleOpenCheckInModal = () => {\n//     this.setState({\n//       checkInIsOpen: !this.state.checkInIsOpen,\n//     });\n//   };\n//   handleOpenDeleteModal = () => {\n//     this.setState({\n//       deleteIsOpen: !this.state.deleteIsOpen,\n//     });\n//   };\n//   getClient = (\n//     clientId,\n//     clientName,\n//     petName,\n//     phoneNumber,\n//     lastTime,\n//     behavior,\n//     banned\n//   ) => {\n//     this.setState({\n//       selectedClientId: clientId,\n//       selectedClientName: clientName,\n//       selectedPetName: petName,\n//       selectedPhoneNumber: phoneNumber,\n//       selectedLastTime: lastTime,\n//       selectedBehavior: behavior,\n//       selectedBanned: banned,\n//     });\n//   };\n//   updateSearch = (event) => {\n//     this.setState({\n//       search: event.target.value,\n//     });\n//   };\n//   changeOrder = (event) => {\n//     this.setState(\n//       {\n//         orderOfitems: event.target.text,\n//       },\n//       this.updateListOfClients\n//     );\n//   };\n//   deleteClient = (clientId) => {\n//     const url = \"http://localhost:8080/pet/deletePet/\" + clientId;\n//     // state, before delete anything\n//     const currentClients = this.state.clientData;\n//     // Remove deleted item from state.\n//     this.setState({\n//       clientData: currentClients.filter(clients => clients.petId !== clientId),\n//     });\n//     axios\n//       .delete(url)\n//       .then(response => {\n//         if (response.status === 'error') {\n//           // Oops, something went wrong. Let's get that deleted Id back.\n//           this.setState({\n//             clientData: currentClients,\n//           });\n//           // Show Error message here.\n//         } else {\n//           // Delete successfully, do nothing.\n//           // Because we already remove the deleted id from state.\n//           // Show success message here.\n//           //TODO CREATE A Message on screen to show successful delete\n//           console.log(\"Pet is bye bye\")\n//         }\n//       });\n//   };\n//   updateListOfClients = () => {\n//     switch (this.state.orderOfitems) {\n//       case \"Alphabetical\":\n//         this.setState({\n//           clientData: this.state.clientData.sort(\n//             (a, b) => (a.petName > b.petName) * 2 - 1\n//           ),\n//         });\n//         break;\n//       case \"Date Newer - Older\":\n//         this.setState({\n//           clientData: this.state.clientData.sort(\n//             (a, b) => (a.lastTime < b.lastTime) * 2 - 1\n//           ),\n//         });\n//         break;\n//       default:\n//         this.setState({\n//           clientData: this.state.clientData.sort(\n//             (a, b) => (a.lastTime > b.lastTime) * 2 - 1\n//           ),\n//         });\n//     }\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <NavBar search={this.state.search} updateSearch={this.updateSearch} />\n//         <OrderNCreateBar\n//           changeOrder={this.changeOrder}\n//           order={this.state.orderOfitems}\n//           toggleCreateModal={this.handleOpenCreateModal}\n//         />\n//         <TableOfClients\n//           order={this.state.orderOfitems}\n//           search={this.state.search}\n//           clientData={this.state.clientData}\n//           selectClient={this.getClient}\n//           toggleCheckIn={this.handleOpenCheckInModal}\n//           toggleDelete={this.handleOpenDeleteModal}\n//           toggleEdit={this.handleOpenEditModal}\n//         />\n//         {this.state.createIsOpen ? (\n//           <CreateModal\n//             toggleCreateModal={this.handleOpenCreateModal}\n//             getAllClients={this.getAllClients}\n//           />\n//         ) : null}\n//         {this.state.editIsOpen ? (\n//           <EditModal\n//             toggleEditModal={this.handleOpenEditModal}\n//             clientId={this.state.selectedClientId}\n//             petName={this.state.selectedPetName}\n//             clientName={this.state.selectedClientName}\n//             phoneNumber={this.state.selectedPhoneNumber}\n//             behavior={this.state.selectedBehavior}\n//             banned={this.state.selectedBanned}\n//           />\n//         ) : null}\n//         <CheckInModal\n//           showModal={this.state.checkInIsOpen}\n//           clientId={this.state.selectedClientId}\n//           clientName={this.state.selectedClientName}\n//           clientLastTime={this.state.selectedLastTime}\n//           petName={this.state.selectedPetName}\n//           clientPhoneNumber={this.state.selectedPhoneNumber}\n//           onHide={this.handleOpenCheckInModal}\n//           getAllClients={this.getAllClients}\n//         />\n//         <DeleteModal\n//           showModal={this.state.deleteIsOpen}\n//           clientId={this.state.selectedClientId}\n//           clientName={this.state.selectedClientName}\n//           petName={this.state.selectedPetName}\n//           clientPhoneNumber={this.state.selectedPhoneNumber}\n//           onHide={this.handleOpenDeleteModal}\n//           deleteClient={this.deleteClient}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/andresnew00/Desktop/Projects/Pet-Tracker-React-Springboot/src/main/java/com/company/Pettracker/app/src/App.js"],"names":["React","NavBar","OrderNCreateBar","TableOfClients","CreateModal","CheckInModal","DeleteModal","EditModal","useState","useEffect","Axios","App","clientData","setClientData","selectedClient","setSelectedClient","createIsOpen","setCreateIsOpen","checkInIsOpen","setCheckInIsOpen","deleteIsOpen","setDeleteIsOpen","editIsOpen","setEditIsOpen","updateList","setUpdateList","search","setSearch","orderOfItems","setOrderOfItems","get","then","response","data","console","log","handleOpenCreateModal","handleCheckInModal","handleDeleteModal","handleEditModal","updateSearch","e","target","value","updateListOfClients","sort","a","b","petName","lastTime","updateSelectedClient","clientId","clientName","phoneNumber","behavior","banned","petId","clie","changeOrder","text","deleteClient","url","currentClients","filter","clients","delete","status"],"mappings":"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,EAAEpC,cALlB;AAME,IAAA,aAAa,EAAEuB,kBANjB;AAOE,IAAA,YAAY,EAAEC,iBAPhB;AAQE,IAAA,UAAU,EAAEC,eARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAiBGvB,YAAY,gBACX,oBAAC,WAAD;AACE,IAAA,iBAAiB,EAAEoB,qBADrB;AAEE,IAAA,aAAa,EAAEX,aAFjB;AAGE,IAAA,UAAU,EAAED,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,GAMT,IAvBN,EAwBGF,UAAU,gBACT,oBAAC,SAAD;AACE,IAAA,eAAe,EAAEiB,eADnB;AAEE,IAAA,iBAAiB,EAAExB,iBAFrB;AAGE,IAAA,cAAc,EAAED,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAMP,IA9BN,eA+BE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAEI,aADb;AAEE,IAAA,cAAc,EAAEJ,cAFlB;AAGE,IAAA,MAAM,EAAEuB,kBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,eAoCE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEjB,YADb;AAEE,IAAA,cAAc,EAAEN,cAFlB;AAGE,IAAA,MAAM,EAAEwB,iBAHV;AAIE,IAAA,YAAY,EAAEsB,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CADF;AA6CD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport OrderNCreateBar from \"./components/OrderNCreateBar\";\nimport TableOfClients from \"./components/TableOfClients\";\nimport CreateModal from \"./components/CreateModal\";\nimport CheckInModal from \"./components/CheckInModal\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport EditModal from \"./components/EditModal\";\n\nimport { useState, useEffect } from \"react\";\n\nimport Axios from \"axios\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [clientData, setClientData] = useState([]);\n  const [selectedClient, setSelectedClient] = useState();\n\n  const [createIsOpen, setCreateIsOpen] = useState(false);\n  const [checkInIsOpen, setCheckInIsOpen] = useState(false);\n  const [deleteIsOpen, setDeleteIsOpen] = useState(false);\n  const [editIsOpen, setEditIsOpen] = useState(false);\n\n  const [updateList, setUpdateList] = useState(false);\n\n  const [search, setSearch] = useState(\"\");\n  const [orderOfItems, setOrderOfItems] = useState(\"Date Older - Newer\");\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:8080/pet/getAll\").then((response) => {\n      setClientData(response.data);\n      console.log(\"useEffect ran\");\n    });\n  }, [updateList]);\n\n  // working!\n  const handleOpenCreateModal = () => {\n    setCreateIsOpen(!createIsOpen);\n  };\n\n  const handleCheckInModal = () => {\n    setCheckInIsOpen(!checkInIsOpen);\n  };\n\n  const handleDeleteModal = () => {\n    setDeleteIsOpen(!deleteIsOpen);\n  };\n\n  const handleEditModal = () => {\n    setEditIsOpen(!editIsOpen);\n  };\n\n  // this works!\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  // working!\n  const updateListOfClients = () => {\n    switch (orderOfItems) {\n      case \"Alphabetical\":\n        setClientData(\n          clientData.sort((a, b) => (a.petName > b.petName) * 2 - 1)\n        );\n        break;\n      case \"Date Newer - Older\":\n        setClientData(\n          clientData.sort((a, b) => (a.lastTime < b.lastTime) * 2 - 1)\n        );\n        break;\n      default:\n        setClientData(\n          clientData.sort((a, b) => (a.lastTime > b.lastTime) * 2 - 1)\n        );\n    }\n  };\n\n  const updateSelectedClient = (\n    clientId,\n    clientName,\n    petName,\n    phoneNumber,\n    lastTime,\n    behavior,\n    banned\n  ) => {\n    setSelectedClient({\n      petId: clie,\n      clientName: clientName,\n      petName: petName,\n      phoneNumber: phoneNumber,\n      lastTime: lastTime,\n      behavior: behavior,\n      banned: banned,\n    });\n  };\n\n  const changeOrder = (e) => {\n    setOrderOfItems(e.target.text);\n    updateListOfClients();\n  };\n\n  const deleteClient = (clientId) => {\n    const url = \"http://localhost:8080/pet/deletePet/\" + clientId;\n\n    // state, before delete anything\n    const currentClients = clientData;\n\n    // Remove deleted item from state.\n    setClientData(\n      currentClients.filter((clients) => clients.petId !== clientId)\n    );\n\n    Axios.delete(url).then((response) => {\n      if (response.status === \"error\") {\n        // Oops, something went wrong. Let's get that deleted Id back.\n        setClientData(currentClients);\n        // Show Error message here.\n      } else {\n        // Delete successfully, do nothing.\n        // Because we already remove the deleted id from state.\n\n        // Show success message here.\n        //TODO CREATE A Message on screen to show successful delete\n        console.log(\"Pet is bye bye\");\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <NavBar search={search} updateSearch={updateSearch} />\n      <OrderNCreateBar\n        changeOrder={changeOrder}\n        order={orderOfItems}\n        toggleCreateModal={handleOpenCreateModal}\n      />\n      <TableOfClients\n        order={orderOfItems}\n        search={search}\n        clientData={clientData}\n        updateSelectedClient={updateSelectedClient}\n        selectedClient={selectedClient}\n        toggleCheckIn={handleCheckInModal}\n        toggleDelete={handleDeleteModal}\n        toggleEdit={handleEditModal}\n      />\n      {createIsOpen ? (\n        <CreateModal\n          toggleCreateModal={handleOpenCreateModal}\n          setUpdateList={setUpdateList}\n          updateList={updateList}\n        />\n      ) : null}\n      {editIsOpen ? (\n        <EditModal\n          toggleEditModal={handleEditModal}\n          setSelectedClient={setSelectedClient}\n          selectedClient={selectedClient}\n        />\n      ) : null}\n      <CheckInModal\n        showModal={checkInIsOpen}\n        selectedClient={selectedClient}\n        onHide={handleCheckInModal}\n      />\n      <DeleteModal\n        showModal={deleteIsOpen}\n        selectedClient={selectedClient}\n        onHide={handleDeleteModal}\n        deleteClient={deleteClient}\n      />\n    </div>\n  );\n}\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.handleOpenCreateModal = this.handleOpenCreateModal.bind(this);\n//     this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n//     this.changeOrder = this.changeOrder.bind(this);\n\n//     this.getClient = this.getClient.bind(this);\n\n//     this.state = {\n//       clientData: [\n//         {\n//           petId: \"\",\n//           clientName: \"\",\n//           petName: \"\",\n//           phoneNumber: \"\",\n//           lastTime: \"\",\n//           behavior: \"\",\n//           banned: \"\",\n//         },\n//       ],\n//       createIsOpen: false,\n//       checkInIsOpen: false,\n//       deleteIsOpen: false,\n//       editIsOpen: false,\n//       search: \"\",\n//       orderOfitems: \"Date Older - Newer\",\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.getAllClients();\n//   }\n\n//   getAllClients = () => {\n//     Axios.get(\"http://localhost:8080/pet/getAll\").then((response) =>\n//       this.setState({ clientData: response.data })\n//     );\n//   };\n\n//   handleOpenCreateModal() {\n//     this.setState({\n//       createIsOpen: !this.state.createIsOpen,\n//     });\n//   }\n\n//   handleOpenEditModal() {\n//     this.setState({\n//       editIsOpen: !this.state.editIsOpen,\n//     });\n//   }\n\n//   handleOpenCheckInModal = () => {\n//     this.setState({\n//       checkInIsOpen: !this.state.checkInIsOpen,\n//     });\n//   };\n\n//   handleOpenDeleteModal = () => {\n//     this.setState({\n//       deleteIsOpen: !this.state.deleteIsOpen,\n//     });\n//   };\n\n//   getClient = (\n//     clientId,\n//     clientName,\n//     petName,\n//     phoneNumber,\n//     lastTime,\n//     behavior,\n//     banned\n//   ) => {\n//     this.setState({\n//       selectedClientId: clientId,\n//       selectedClientName: clientName,\n//       selectedPetName: petName,\n//       selectedPhoneNumber: phoneNumber,\n//       selectedLastTime: lastTime,\n//       selectedBehavior: behavior,\n//       selectedBanned: banned,\n//     });\n//   };\n\n//   updateSearch = (event) => {\n//     this.setState({\n//       search: event.target.value,\n//     });\n//   };\n\n//   changeOrder = (event) => {\n//     this.setState(\n//       {\n//         orderOfitems: event.target.text,\n//       },\n//       this.updateListOfClients\n//     );\n//   };\n\n//   deleteClient = (clientId) => {\n//     const url = \"http://localhost:8080/pet/deletePet/\" + clientId;\n\n//     // state, before delete anything\n//     const currentClients = this.state.clientData;\n\n//     // Remove deleted item from state.\n//     this.setState({\n//       clientData: currentClients.filter(clients => clients.petId !== clientId),\n//     });\n\n//     axios\n//       .delete(url)\n//       .then(response => {\n//         if (response.status === 'error') {\n//           // Oops, something went wrong. Let's get that deleted Id back.\n//           this.setState({\n//             clientData: currentClients,\n//           });\n\n//           // Show Error message here.\n//         } else {\n\n//           // Delete successfully, do nothing.\n//           // Because we already remove the deleted id from state.\n\n//           // Show success message here.\n\n//           //TODO CREATE A Message on screen to show successful delete\n//           console.log(\"Pet is bye bye\")\n\n//         }\n//       });\n//   };\n\n//   updateListOfClients = () => {\n//     switch (this.state.orderOfitems) {\n//       case \"Alphabetical\":\n//         this.setState({\n//           clientData: this.state.clientData.sort(\n//             (a, b) => (a.petName > b.petName) * 2 - 1\n//           ),\n//         });\n//         break;\n//       case \"Date Newer - Older\":\n//         this.setState({\n//           clientData: this.state.clientData.sort(\n//             (a, b) => (a.lastTime < b.lastTime) * 2 - 1\n//           ),\n//         });\n//         break;\n//       default:\n//         this.setState({\n//           clientData: this.state.clientData.sort(\n//             (a, b) => (a.lastTime > b.lastTime) * 2 - 1\n//           ),\n//         });\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <NavBar search={this.state.search} updateSearch={this.updateSearch} />\n//         <OrderNCreateBar\n//           changeOrder={this.changeOrder}\n//           order={this.state.orderOfitems}\n//           toggleCreateModal={this.handleOpenCreateModal}\n//         />\n//         <TableOfClients\n//           order={this.state.orderOfitems}\n//           search={this.state.search}\n//           clientData={this.state.clientData}\n//           selectClient={this.getClient}\n//           toggleCheckIn={this.handleOpenCheckInModal}\n//           toggleDelete={this.handleOpenDeleteModal}\n//           toggleEdit={this.handleOpenEditModal}\n//         />\n//         {this.state.createIsOpen ? (\n//           <CreateModal\n//             toggleCreateModal={this.handleOpenCreateModal}\n//             getAllClients={this.getAllClients}\n//           />\n//         ) : null}\n//         {this.state.editIsOpen ? (\n//           <EditModal\n//             toggleEditModal={this.handleOpenEditModal}\n//             clientId={this.state.selectedClientId}\n//             petName={this.state.selectedPetName}\n//             clientName={this.state.selectedClientName}\n//             phoneNumber={this.state.selectedPhoneNumber}\n//             behavior={this.state.selectedBehavior}\n//             banned={this.state.selectedBanned}\n//           />\n//         ) : null}\n//         <CheckInModal\n//           showModal={this.state.checkInIsOpen}\n//           clientId={this.state.selectedClientId}\n//           clientName={this.state.selectedClientName}\n//           clientLastTime={this.state.selectedLastTime}\n//           petName={this.state.selectedPetName}\n//           clientPhoneNumber={this.state.selectedPhoneNumber}\n//           onHide={this.handleOpenCheckInModal}\n//           getAllClients={this.getAllClients}\n//         />\n//         <DeleteModal\n//           showModal={this.state.deleteIsOpen}\n//           clientId={this.state.selectedClientId}\n//           clientName={this.state.selectedClientName}\n//           petName={this.state.selectedPetName}\n//           clientPhoneNumber={this.state.selectedPhoneNumber}\n//           onHide={this.handleOpenDeleteModal}\n//           deleteClient={this.deleteClient}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}